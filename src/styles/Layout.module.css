.container {
  overflow: hidden;
}

.summarize {
  text-overflow: ellipsis;
}
.oneline {
  white-space: nowrap;
  flex-shrink: 0;
  height: fit-content;
}

.uncollapsable {
  flex-shrink: 0;
}

.stack {
  display: flex;
  gap: 0.5em;
  overflow: hidden;
}
.stack.reverse {
  flex-direction: row-reverse;
}

.stack.v {
  flex-direction: column;
}
.stack.reverse.v {
  flex-direction: column-reverse;
}

.stack .fill {
  flex: 1;
}

.surface .stack {
  gap: 0.5em;
}
.surface {
  /* --fgs: var(--bg); */
  background-color: var(--bg);
  color: var(--fg);
  fill: var(--fg);
  padding: 1em;
  gap: 1em;
  border-radius: 1em;
}
.surface .surface {
  border-radius: 0.5em;
}

.surface {
  --bgnext: var(--bg1);
  --fgnext: var(--fg1);
  --nsnext: var(--bg2);
}
.surface .surface {
  --bgnext: var(--bg2);
  --fgnext: var(--fg2);
  --nsnext: var(--bg3);
}
.surface .surface .surface {
  --bgnext: var(--bg3, var(--bg2));
  --fgnext: var(--fg3, var(--bg2));
  --nsnext: var(--bg4, var(--bg3));
}

.center {
  align-items: center;
  justify-content: center;
}

.related {
  border-radius: 1em;
  gap: 0.5em;
  position: relative;
}
.surface .related.surface {
  padding: 0;
}

.surface .related .related,
.surface.related .related {
  border-radius: 0.5em;
}

.related > * {
  border-radius: 0.5em;
}

.scroll {
  overflow-y: scroll;
  margin-right: -1em;
  min-height: min-content;
  display: block;
  --scroll-color: var(--ns);
}

.scroll:hover {
  --scroll-color: var(--fg);
}

@-moz-document url-prefix() {
  .scroll {
    margin-right: unset;
  }
}

/* Safari 13+ */
@supports (-webkit-hyphens: none) and (not ((-webkit-marquee-repetition:infinite) and (object-fit:fill))) {
  .scroll {
    margin-right: unset;
  }
}

.cta {
  --bgnext: var(--bgcta, var(--fg));
  --fgnext: var(--fgcta, var(--bg));
  background-color: var(--bgcta, var(--fg));
  color: var(--fgcta, var(--bg));
  fill: var(--fgcta, var(--bg));
  /* --fgnext: var(--fgcta, var(--bg)); */
  border-radius: 1em !important;
  font-weight: bold;
}

.cta * {
  font-weight: bolder;
}

.highlight {
  background-color: var(--bgsel, var(--fg));
  color: var(--fgsel, var(--bg));
  fill: var(--fgsel, var(--bg));
  /* --fgnext: var(--fgsel, var(--bg)); */
}
.highlight:focus-visible, 
.highlight :focus-visible {
  outline-color: var(--fgsel, var(--bg));
}

.expandable {
  display: grid;
  grid-template-rows: 0fr;
  transition: grid-template-rows 400ms ease-out;
  overflow: hidden;
}

.expanded {
  grid-template-rows: 1fr;
}

.unwrap {
  margin: -1em;
  padding: 1em;
}

.unselectable {
  user-select: none;
}

.clickable {
  cursor: pointer;
  position: relative;
}

/* .clickable:not(.highlight):not(.cta) {
  background: var(--bg);
} */
.clickable:not(.highlight):not(.cta):hover {
  background: var(--ns);
}

.disabled {
  filter: opacity(0.5);
}

/* .cc {
  border: none;
  padding: 0;
  background-color: transparent;
  font: inherit;
  color: inherit;
} */
